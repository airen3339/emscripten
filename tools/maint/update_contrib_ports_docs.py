#!/usr/bin/env python3
# Copyright 2024 The Emscripten Authors.  All rights reserved.
# Emscripten is available under two separate licenses, the MIT license and the
# University of Illinois/NCSA Open Source License.  Both these licenses can be
# found in the LICENSE file.

"""Generate the documentation for contrib ports. After adding/updating
a contrib port, this tool must be re-run.
"""

import os
import sys
import subprocess

script_dir = os.path.dirname(os.path.abspath(__file__))
root_dir = os.path.dirname(os.path.dirname(script_dir))

sys.path.append(root_dir)

from tools.utils import path_from_root, read_file, safe_ensure_dirs
from tools import ports

header = '''\
.. _contrib_ports:

========================
Emscripten Contrib Ports
========================

Contrib ports are contributed by the wider community and 
supported on a "best effort" basis. Since they are not run as part 
of emscripten CI they are not always guaranteed to build or function.
          
The following is the complete list of the contrib ports that are 
available in emscripten. In order to use a contrib port you use the 
``--use-port=<port_name>`` option (:ref:`emcc <emcc-use-port>`).

.. Auto-generated by update_contrib_ports_docs.py. **DO NOT EDIT**
'''


output_file = path_from_root('site/source/docs/compiling/Contrib-Ports.rst')


def write_contrib_port(f, port):
  heading = port.name
  f.write('\n.. _' + heading.lower() + ':\n')
  f.write('\n' + heading + '\n')
  f.write('=' * len(heading) + '\n\n')
  f.write(port.project_description())
  f.write(f'\n\n`Project information <{port.project_url()}>`_')
  f.write(f'\n\nLicense: {port.project_license()}')


def write_contrib_ports(f):
  for port in sorted(ports.ports, key=lambda p: p.name):
    if port.is_contrib:
      write_contrib_port(f, port)

def write_file(f):
  f.write(header)
  write_contrib_ports(f)

def main(args):
  if '--check' in args:
    safe_ensure_dirs(path_from_root('out'))
    tmp_output = path_from_root('out/Contrib-Ports.rst')
    with open(tmp_output, 'w') as f:
      write_file(f)
    if read_file(tmp_output) != read_file(output_file):
      print(f'{output_file} is out-of-date.  Please run tools/maint/update_contrib_ports_docs.py')
      subprocess.call(['diff', '-u', output_file, tmp_output])
      return 1
  else:
    with open(output_file, 'w') as f:
      write_file(f)

  return 0


if __name__ == '__main__':
  sys.exit(main(sys.argv[1:]))
