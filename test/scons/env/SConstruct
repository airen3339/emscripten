import json
import os


def assert_(value, expected):
  if value != expected:
    print("assert failed:", value, expected)
    Exit(1)


env = Environment(toolpath=[os.environ.get('EMSCRIPTEN_TOOL_PATH')])
env['ENV'] = dict()

env.Tool('emscripten')

AddOption(
    '--expected-env',
    dest='expected',
    type='string',
    nargs=1,
    action='store',
    help='JSON with the expected environment variables',
)

expected_env = json.loads(GetOption('expected'))

for key in expected_env:
    assert_(env['ENV'].get(key), expected_env[key])

assert_(env['CC'], expected_env['CC'])
assert_(env['CXX'], expected_env['CXX'])
assert_(env['AR'], expected_env['AR'])
assert_(env['RANLIB'], expected_env['RANLIB'])

Exit(0)
